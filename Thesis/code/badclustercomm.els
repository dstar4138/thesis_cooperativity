fun N,M,X. // Number of Processes, Channels, and times a Process should Swap
(
    // Create the list of channels for random access.
    let chanlist = (omega fun f,L,s.(if (leq s 0) 
                                        L
                                        (f f (cons newchan L) (dec s)))
                     newlist M)
    in
    
    // Randomly swap, by selecting random channel in chanlist.
    let rswap = fun _.(swap (index chanlist (rand M)) nil) 
    in

    // Worker Thread, loops for X times and randomly swaps.
    let worker_t = fun _.(omega fun f,c.(if (leq c 0) 
                                            1
                                            (ignore (rswap 0) 
                                                    (f f (dec c)))) 
                                X)
    in

    // "Main" Function, spawns N worker threads and waits for their return.
    (omega fun f,c.(if (leq c 1)
                       (worker_t nil)
                       (merge (fun _.(f f (dec c))) 
                              worker_t 
                              ignore))
     N)
)
